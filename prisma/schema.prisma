// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AgCliente {
  cpf_cliente  String     @id
  nome_cliente String
  telefone     String?
  logradouro   String?
  numero       Int?
  bairro       String?
  cidade       String?
  uf           String?
  complemento  String?
  cep          String?
  ag_agenda    AgAgenda[]
  Ve_vendas    VeVendas[]
}


model AgProfissional {
  id_profissional Int            @id @default(autoincrement())
  nome_profissional String
  cod_especialidade Int
  ag_agenda         AgAgenda[]
  Ve_Itens_da_Venda VeVendas[]
}

model AgProcedimentos {
  id_procedimento Int            @id @default(autoincrement())
  procedimento    String
  custo_total     Float
  cod_especialidade Int
  ag_agenda       AgAgenda[]
  Ve_Itens_da_Venda VeVendas[]
}

model AgAgenda {
  id_agenda      Int            @id @default(autoincrement())
  cpf_cliente    String

  id_procedimento Int
  id_profissional Int

  data_abertura  DateTime
  data_fechamento  DateTime?

  AgCliente      AgCliente     @relation(fields: [cpf_cliente], references: [cpf_cliente])
  AgProcedimentos AgProcedimentos @relation(fields: [id_procedimento], references: [id_procedimento])
  AgProfissional AgProfissional @relation(fields: [id_profissional], references: [id_profissional])
}

model VeVendas {
  Id_Vendas  Int             @id @default(autoincrement())
  CPF_Cliente String
  status_pagamento String    @default("pendente")
  forma_De_pagamento String

  Id_Procedimento Int
  Id_Profissional Int

  valor           Float
  id_agenda       Int


  AgCliente  AgCliente       @relation(fields: [CPF_Cliente], references: [cpf_cliente])
  AgProcedimentos AgProcedimentos @relation(fields: [Id_Procedimento], references: [id_procedimento])
  AgProfissional  AgProfissional  @relation(fields: [Id_Profissional], references: [id_profissional])
}





